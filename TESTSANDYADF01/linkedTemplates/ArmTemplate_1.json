{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "TESTSANDYADF01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Encrypt_Source1_Parent_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EncryptFilesusingLogicApps",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ExecuteChildPipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "ENCRYPTION END POINT",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"Accountname": "@pipeline().parameters.data_lake_storage_account",
								"ExtractType": "@pipeline().parameters.extract_type",
								"DataSource": "PROD",
								"Folderpath": "@pipeline().parameters.folder_name"
							}
						}
					},
					{
						"name": "ExecuteChildPipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Source1_Split_Child_Pipeline1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"no_of_records_per_file": "15000",
								"data_lake_storage_account": {
									"value": "@pipeline().parameters.data_lake_storage_account",
									"type": "Expression"
								},
								"folder_name": {
									"value": "@pipeline().parameters.folder_name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"concurrency": 1,
				"parameters": {
					"no_of_records_per_file": {
						"type": "int"
					},
					"data_lake_storage_account": {
						"type": "string"
					},
					"folder_name": {
						"type": "string"
					},
					"extract_type": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Analytical Datawarehouse Model with File Encryption/Data Preparation Pipelines/File Encryption"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-07T09:23:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily_Data_Load_Parent_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckforDataObfuscation",
						"description": "",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetObfuscationFlag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetObfuscationFlag').output.firstRow.FACTOR_VALUE,'N')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ExecuteSource1ObfuscateDailyDataLoadPipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Daily_Obfuscate_Load_Parent_Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "ExecuteSource1DailyDataLoadPipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Daily_Obfuscate_Load_Parent_Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					},
					{
						"name": "GetObfuscationFlag",
						"description": "Get obfuscation flag details from SQL DW.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select\n\tFACTOR_VALUE\nfrom\nstaging.CONTROL_LOAD\nWHERE\n\tcontrol_factor = 'OBFUSCATION_NEEDED';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Datawarehouse_Target",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": {
										"value": "@empty('')",
										"type": "Expression"
									},
									"table_name": {
										"value": "@empty('')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "ExecuteSource1EncryptPipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckforDataObfuscation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Encrypt_Source1_Parent_Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"no_of_records_per_file": "10000",
								"data_lake_storage_account": {
									"value": "@pipeline().globalParameters.Data_Lake_Storage_Account",
									"type": "Expression"
								},
								"folder_name": {
									"value": "@concat('B2C/Master/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'),'/Processed')",
									"type": "Expression"
								},
								"extract_type": "Delta"
							}
						}
					}
				],
				"concurrency": 1,
				"parameters": {
					"Extract_Year": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Analytical Datawarehouse Model with File Encryption/Data Preparation Pipelines/Daily Data Interface"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-07T09:23:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Encrypt_Source1_Parent_Pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parent_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetEnvironmentName",
						"description": "Get the environment details",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "Select UPPER(VALUE) DB_INSTANCE From Xx_Env.Xx_Environment_Variables\nWhere ENVIRONMENT_VARIABLE = 'ENVIRONMENT';",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "Oracle_Source3",
								"type": "DatasetReference",
								"parameters": {
									"in_extraction_date": {
										"value": "@empty('')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GetConversionFlag",
						"description": "Get conversion flag details from SQL DW.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetEnvironmentName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select\n\tFACTOR_VALUE\nfrom\nstaging.LOAD_CONTROL\nWHERE\n\tcontrol_factor = 'DATA_CONVERSION';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Datawarehouse_Target",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": {
										"value": "@empty('')",
										"type": "Expression"
									},
									"table_name": {
										"value": "@empty('')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "CheckConversionFlag",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetConversionFlag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetConversionFlag').output.firstRow.FACTOR_VALUE,'N')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ExecuteConversionPipeline",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SetErrorFolderforConversion",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Stage_Data_Prep_Parent_Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "SetErrorFolderforConversion",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "error_folder_name",
										"value": {
											"value": "@if(empty(pipeline().parameters.Extract_Year),concat('B2C/Master/',formatDateTime(utcnow(),'yyyy'),'/Error'),concat('B2C/Master/',pipeline().parameters.Extract_Year,'/Error'))",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "ExecuteDailyDataPipeline",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SetErrorFolderforDailyData",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Daily_Data_Load_Parent_Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Extract_Year": {
												"value": "@pipeline().parameters.Extract_Year",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "SetErrorFolderforDailyData",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "error_folder_name",
										"value": {
											"value": "@concat('B2C/Master/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'),'/Error')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "ExecuteReferenceDataPipeline",
						"description": "Execute pipeline to pull and load reference data files from SharePoint To SQL DW",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckConversionFlag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Reference_Files_Load_Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"data_lake_storage_account": {
									"value": "@pipeline().globalParameters.Data_Lake_Storage_Account",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecuteStagePrepPipeline",
						"description": "Prepare gold copy data/stage data preparation.",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecuteReferenceDataPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Stage_Data_Prep_Parent_Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecuteDimRefresh",
						"description": "Refresh Dimensions and Fact IR table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecuteStagePrepPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Dimensions_Prep_Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecuteAnalysisServicesRefresh",
						"description": "Refresh Azure Analysis Service",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecuteFactRefresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Azure_Analysis_Service_Refresh_Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecuteFactRefresh",
						"description": "Refresh Dimensions and Fact IR table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecuteDimRefresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Fact_Prep_Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"concurrency": 1,
				"parameters": {
					"Extract_Year": {
						"type": "string"
					}
				},
				"variables": {
					"error_folder_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Analytical Datawarehouse Model with File Encryption"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-07T09:23:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Daily_Data_Load_Parent_Pipeline')]"
			]
		}
	]
}